<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://jacoverster.github.io/ml-blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://jacoverster.github.io/ml-blog/" rel="alternate" type="text/html" /><updated>2022-07-05T08:43:16-05:00</updated><id>https://jacoverster.github.io/ml-blog/feed.xml</id><title type="html">Jaco Verster</title><subtitle>A space to document adventures on my computer.</subtitle><entry><title type="html">Faster Python - tips and examples</title><link href="https://jacoverster.github.io/ml-blog/python/optimization/2022/07/05/Faster-Python.html" rel="alternate" type="text/html" title="Faster Python - tips and examples" /><published>2022-07-05T00:00:00-05:00</published><updated>2022-07-05T00:00:00-05:00</updated><id>https://jacoverster.github.io/ml-blog/python/optimization/2022/07/05/Faster-Python</id><author><name>Jaco Verster</name></author><category term="python" /><category term="optimization" /><summary type="html"><![CDATA[A collection of tips and tricks to speed up your Python code.]]></summary></entry><entry><title type="html">Training a pistol detector with YOLOv5 and Neuralmagic</title><link href="https://jacoverster.github.io/ml-blog/object%20detection/yolov5/neuralmagic/pistols/2022/06/30/Training-a-pistol-detector-with-YOLOv5-and-Neuralmagic.html" rel="alternate" type="text/html" title="Training a pistol detector with YOLOv5 and Neuralmagic" /><published>2022-06-30T00:00:00-05:00</published><updated>2022-06-30T00:00:00-05:00</updated><id>https://jacoverster.github.io/ml-blog/object%20detection/yolov5/neuralmagic/pistols/2022/06/30/Training-a-pistol-detector-with-YOLOv5-and-Neuralmagic</id><author><name>Jaco Verster</name></author><category term="object detection" /><category term="yolov5" /><category term="neuralmagic" /><category term="pistols" /><summary type="html"><![CDATA[An pistol detection model trained with Neuralmagic and deployed using DeepSparse, a sparsity-aware inference engine that allows improved model inference performance on CPU hardware.]]></summary></entry><entry><title type="html">Estimating required sample size for model training</title><link href="https://jacoverster.github.io/ml-blog/keras/sample%20size/2021/06/05/Keras-sample-size-example.html" rel="alternate" type="text/html" title="Estimating required sample size for model training" /><published>2021-06-05T00:00:00-05:00</published><updated>2021-06-05T00:00:00-05:00</updated><id>https://jacoverster.github.io/ml-blog/keras/sample%20size/2021/06/05/Keras-sample-size-example</id><author><name>Jaco Verster</name></author><category term="keras" /><category term="sample size" /><summary type="html"><![CDATA[Modeling the relationship between training set size and model accuracy.]]></summary></entry></feed>